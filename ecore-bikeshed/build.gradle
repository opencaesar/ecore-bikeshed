plugins { id "org.xtext.xtend" version "2.0.8" }

sourceSets {
	main { xtendOutputDir = 'src/main/xtend-gen' }
	test { xtendOutputDir = 'src/test/xtend-gen' }
}

apply plugin: 'application'

ext.title = 'Ecore to Bikeshed'
description = 'Bikeshed generator for Ecore'
mainClassName = 'io.opencaesar.ecore.bikeshed.Ecore2BikeshedApp'
applicationName = 'ecore2bikeshed'

dependencies {
	implementation "com.beust:jcommander:${versions.jcommander}"
	implementation "log4j:log4j:${versions.log4j}"
	implementation "org.slf4j:slf4j-simple:${versions.slf4j}"
	testImplementation "junit:junit:${versions.junit}"

	implementation "net.sourceforge.plantuml:plantuml:${versions.plantuml}"

	implementation "org.eclipse.xtext:org.eclipse.xtext.ecore:${versions.xtext}"
	implementation "org.eclipse.xtext:org.eclipse.xtext.xbase:${versions.xtext}"
	implementation ("org.eclipse.emf:org.eclipse.emf.ecore.xcore:${versions.xcore}"){
		exclude group: 'org.antlr', module: 'antlr-runtime'
	}
	implementation "org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:${versions.xcoreLib}"
	implementation "org.eclipse.emf:org.eclipse.emf.mwe2.runtime:${versions.mwe2}"
	implementation "org.eclipse.emf:org.eclipse.emf.codegen:${versions.codegen}"
	implementation "org.eclipse.emf:org.eclipse.emf.codegen.ecore:${versions.codegenEcore}"
	implementation "org.eclipse.emf:org.eclipse.emf.codegen.ecore.xtext:${versions.codegenEcoreXtext}"
}
