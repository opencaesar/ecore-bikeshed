buildscript {
	repositories {
	    mavenLocal()
  		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'org.xtext:xtext-gradle-plugin:1.0.21'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}


apply plugin: 'java'
apply plugin: 'org.xtext.xtend'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'java-gradle-plugin'
apply plugin: 'com.jfrog.bintray'

group = 'io.opencaesar.bikeshed'
version = '0.6.5'
mainClassName = 'io.opencaesar.ecore2bikeshed.App'
applicationName = 'ecore2bikeshed'
ext.title = 'Ecore to Bikeshed'
description = 'Bikeshed generator for Ecore'

apply from: "${rootDir}/gradle/source-layout.gradle"
apply from: "${rootDir}/gradle/maven-deployment.gradle"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.beust:jcommander:1.72'
 	implementation 'xml-resolver:xml-resolver:1.2'
	implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xcore:1.3.+'
	implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:1.1.+'
	implementation "org.eclipse.emf:org.eclipse.emf.mwe2.runtime:2.9.0.201605261059"
	implementation 'org.eclipse.emf:org.eclipse.emf.codegen:+'
	implementation 'org.eclipse.emf:org.eclipse.emf.codegen.ecore:2.11.+'
	implementation 'org.eclipse.emf:org.eclipse.emf.codegen.ecore.xtext:1.2.+'
	implementation 'org.eclipse.xtext:org.eclipse.xtext.ecore:2.16.0'
	implementation 'org.eclipse.xtext:org.eclipse.xtext.xbase:2.16.0'
	implementation 'net.sourceforge.plantuml:plantuml:1.2019.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

gradlePlugin {
    plugins {
        ecore2BikeshedPlugin {
            id = 'io.opencaesar.ecore2bikeshed'
            implementationClass = 'io.opencaesar.ecore2bikeshed.GradlePlugin'
        }
    }

	task createVersion {
	    doLast {
	        def version = project.version.toString()
	        def file = new File("$projectDir/src/main/resources/version.txt")
	        file.write(version)
	    }
	}
	
	classes {
	    dependsOn createVersion
	}
}

